{"map":"{\"version\":3,\"sources\":[\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/App.tsx\",\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/index.tsx\"],\"names\":[\"App\",\"game\",\"setGame\",\"useState\",\"selectedSquare\",\"setSelectedSquare\",\"debugBoard\",\"setDebugBoard\",\"apiEndpoint\",\"React\",\"createElement\",\"className\",\"style\",\"padding\",\"textAlign\",\"onClick\",\"async\",\"response\",\"fetch\",\"concat\",\"method\",\"headers\",\"Content-Type\",\"ok\",\"Error\",\"newGame\",\"json\",\"console\",\"log\",\"JSON\",\"stringify\",\"board\",\"error\",\"alert\",\"fontSize\",\"backgroundColor\",\"color\",\"border\",\"borderRadius\",\"cursor\",\"marginBottom\",\"gameId\",\"status\",\"currentPlayer\",\"display\",\"map\",\"row\",\"rowIndex\",\"key\",\"piece\",\"colIndex\",\"_game$board2\",\"_game$board2$rowIndex\",\"isSelected\",\"col\",\"isValidDestination\",\"_game$board\",\"_game$board$row\",\"isCurrentPlayersPiece\",\"toLowerCase\",\"from\",\"to\",\"body\",\"fromRow\",\"fromCol\",\"toRow\",\"toCol\",\"responseData\",\"message\",\"handleSquareClick\",\"width\",\"height\",\"justifyContent\",\"alignItems\",\"userSelect\",\"position\",\"renderPiece\",\"marginTop\",\"whiteSpace\",\"fontFamily\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from 'react';\\n\\ninterface GameState {\\n  gameId?: string;\\n  board?: string[][];\\n  currentPlayer?: 'red' | 'black';\\n  status?: 'waiting' | 'in_progress' | 'finished';\\n}\\n\\ninterface Square {\\n  row: number;\\n  col: number;\\n  piece: string;\\n}\\n\\nfunction App() {\\n  const [game, setGame] = useState<GameState>({});\\n  const [selectedSquare, setSelectedSquare] = useState<Square | null>(null);\\n  const [debugBoard, setDebugBoard] = useState<string>('');\\n  const apiEndpoint = 'https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod';\\n\\n  const createNewGame = async () => {\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        }\\n      });\\n      \\n      if (!response.ok) {\\n        throw new Error('Failed to create game');\\n      }\\n\\n      const newGame = await response.json();\\n      console.log('New game state:', newGame);\\n      setDebugBoard(JSON.stringify(newGame.board, null, 2));\\n      setGame(newGame);\\n      setSelectedSquare(null);\\n    } catch (error) {\\n      console.error('Error creating game:', error);\\n      alert('Failed to create new game. Please try again.');\\n    }\\n  };\\n\\n  const handleSquareClick = async (row: number, col: number) => {\\n    if (!game.gameId || game.status === 'finished') return;\\n    \\n    const piece = game.board?.[row]?.[col];\\n    console.log('Clicked square:', row, col);\\n    console.log('Current piece:', piece);\\n    console.log('Current player:', game.currentPlayer);\\n    console.log('Selected square:', selectedSquare);\\n\\n    // First click - selecting a piece\\n    if (!selectedSquare) {\\n      // Check if the clicked square has a piece\\n      if (!piece) {\\n        console.log('Clicked empty square');\\n        return;\\n      }\\n\\n      // Check if it's the current player's piece\\n      const isCurrentPlayersPiece = \\n        (game.currentPlayer === 'red' && piece.toLowerCase() === 'r') ||\\n        (game.currentPlayer === 'black' && piece.toLowerCase() === 'b');\\n\\n      console.log('Is current players piece:', isCurrentPlayersPiece);\\n\\n      if (!isCurrentPlayersPiece) {\\n        alert(\\\"You can only move your own pieces!\\\");\\n        return;\\n      }\\n\\n      // Valid piece selection\\n      console.log('Selecting piece');\\n      setSelectedSquare({ row, col, piece });\\n      return;\\n    }\\n\\n    // Second click - making a move\\n    console.log('Attempting move:', {\\n      from: { row: selectedSquare.row, col: selectedSquare.col },\\n      to: { row, col }\\n    });\\n\\n    // Don't make API call if clicking the same square\\n    if (selectedSquare.row === row && selectedSquare.col === col) {\\n      console.log('Deselecting piece');\\n      setSelectedSquare(null);\\n      return;\\n    }\\n\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games/${game.gameId}`, {\\n        method: 'PUT',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({\\n          fromRow: selectedSquare.row,\\n          fromCol: selectedSquare.col,\\n          toRow: row,\\n          toCol: col\\n        }),\\n      });\\n\\n      const responseData = await response.json();\\n      \\n      if (!response.ok) {\\n        throw new Error(responseData.error || 'Invalid move');\\n      }\\n\\n      console.log('Move successful:', responseData);\\n      setGame(responseData);\\n      setSelectedSquare(null);\\n    } catch (error) {\\n      console.error('Error making move:', error);\\n      alert(error instanceof Error ? error.message : 'Invalid move. Please try again.');\\n      setSelectedSquare(null);\\n    }\\n  };\\n\\n  const renderPiece = (piece: string) => {\\n    console.log('Rendering piece:', piece);\\n    if (piece === 'r') return 'ðŸ”´';\\n    if (piece === 'b') return 'âš«';\\n    if (piece === 'R') return 'ðŸ‘‘ðŸ”´';\\n    if (piece === 'B') return 'ðŸ‘‘âš«';\\n    return '';\\n  };\\n\\n  const renderBoard = () => {\\n    if (!game.board) return null;\\n\\n    return (\\n      <div>\\n        <div style={{ \\n          display: 'inline-block',\\n          border: '2px solid #333',\\n          borderRadius: '4px',\\n          padding: '10px',\\n          backgroundColor: '#ddd'\\n        }}>\\n          {game.board.map((row, rowIndex) => (\\n            <div key={rowIndex} style={{ display: 'flex' }}>\\n              {row.map((piece, colIndex) => {\\n                const isSelected = selectedSquare?.row === rowIndex && selectedSquare?.col === colIndex;\\n                const isValidDestination = selectedSquare && \\n                  ((rowIndex + colIndex) % 2 === 1) && // Only black squares\\n                  !game.board?.[rowIndex]?.[colIndex]; // Only empty squares\\n\\n                return (\\n                  <div\\n                    key={`${rowIndex}-${colIndex}`}\\n                    onClick={() => handleSquareClick(rowIndex, colIndex)}\\n                    style={{\\n                      width: '60px',\\n                      height: '60px',\\n                      backgroundColor: isSelected ? '#90EE90' : \\n                                    isValidDestination ? '#98FB98' :\\n                                    (rowIndex + colIndex) % 2 === 0 ? '#fff' : '#666',\\n                      display: 'flex',\\n                      justifyContent: 'center',\\n                      alignItems: 'center',\\n                      fontSize: '40px',\\n                      cursor: 'pointer',\\n                      userSelect: 'none',\\n                      border: isSelected ? '2px solid #32CD32' : 'none',\\n                      position: 'relative'\\n                    }}\\n                  >\\n                    {renderPiece(piece)}\\n                  </div>\\n                );\\n              })}\\n            </div>\\n          ))}\\n        </div>\\n        <div style={{ marginTop: '20px', textAlign: 'left', whiteSpace: 'pre', fontFamily: 'monospace' }}>\\n          Debug Board State:\\n          {debugBoard}\\n        </div>\\n      </div>\\n    );\\n  };\\n\\n  return (\\n    <div className=\\\"App\\\" style={{ padding: '20px', textAlign: 'center' }}>\\n      <h1>Checkers Game</h1>\\n      \\n      <button \\n        onClick={createNewGame}\\n        style={{\\n          padding: '10px 20px',\\n          fontSize: '16px',\\n          backgroundColor: '#4CAF50',\\n          color: 'white',\\n          border: 'none',\\n          borderRadius: '4px',\\n          cursor: 'pointer',\\n          marginBottom: '20px'\\n        }}\\n      >\\n        New Game\\n      </button>\\n\\n      {game.gameId && (\\n        <div>\\n          <p style={{ marginBottom: '10px' }}>\\n            <strong>Game ID:</strong> {game.gameId} | \\n            <strong> Status:</strong> {game.status} |\\n            <strong> Current Player:</strong> {game.currentPlayer}\\n          </p>\\n          {renderBoard()}\\n        </div>\\n      )}\\n\\n      {!game.gameId && (\\n        <div>Click \\\"New Game\\\" to start playing!</div>\\n      )}\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\n\\nconst root = ReactDOM.createRoot(\\n  document.getElementById('root') as HTMLElement\\n);\\n\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,o,t){\"use strict\";t.r(o);var r=t(0),n=t.n(r),a=t(2);var l=function(){const[e,o]=Object(r.useState)({}),[t,a]=Object(r.useState)(null),[l,c]=Object(r.useState)(\"\"),i=\"https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod\";return n.a.createElement(\"div\",{className:\"App\",style:{padding:\"20px\",textAlign:\"center\"}},n.a.createElement(\"h1\",null,\"Checkers Game\"),n.a.createElement(\"button\",{onClick:async()=>{try{const t=await fetch(\"\".concat(i,\"/games\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});if(!t.ok)throw new Error(\"Failed to create game\");const r=await t.json();console.log(\"New game state:\",r),c(JSON.stringify(r.board,null,2)),o(r),a(null)}catch(e){console.error(\"Error creating game:\",e),alert(\"Failed to create new game. Please try again.\")}},style:{padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\",marginBottom:\"20px\"}},\"New Game\"),e.gameId&&n.a.createElement(\"div\",null,n.a.createElement(\"p\",{style:{marginBottom:\"10px\"}},n.a.createElement(\"strong\",null,\"Game ID:\"),\" \",e.gameId,\" |\",n.a.createElement(\"strong\",null,\" Status:\"),\" \",e.status,\" |\",n.a.createElement(\"strong\",null,\" Current Player:\"),\" \",e.currentPlayer),e.board?n.a.createElement(\"div\",null,n.a.createElement(\"div\",{style:{display:\"inline-block\",border:\"2px solid #333\",borderRadius:\"4px\",padding:\"10px\",backgroundColor:\"#ddd\"}},e.board.map((r,l)=>n.a.createElement(\"div\",{key:l,style:{display:\"flex\"}},r.map((r,c)=>{var s,d;const u=(null===t||void 0===t?void 0:t.row)===l&&(null===t||void 0===t?void 0:t.col)===c,m=t&&(l+c)%2===1&&!(null===(s=e.board)||void 0===s?void 0:null===(d=s[l])||void 0===d?void 0:d[c]);return n.a.createElement(\"div\",{key:\"\".concat(l,\"-\").concat(c),onClick:()=>(async(r,n)=>{var l,c;if(!e.gameId||\"finished\"===e.status)return;const s=null===(l=e.board)||void 0===l?void 0:null===(c=l[r])||void 0===c?void 0:c[n];if(console.log(\"Clicked square:\",r,n),console.log(\"Current piece:\",s),console.log(\"Current player:\",e.currentPlayer),console.log(\"Selected square:\",t),!t){if(!s)return void console.log(\"Clicked empty square\");const o=\"red\"===e.currentPlayer&&\"r\"===s.toLowerCase()||\"black\"===e.currentPlayer&&\"b\"===s.toLowerCase();return console.log(\"Is current players piece:\",o),o?(console.log(\"Selecting piece\"),void a({row:r,col:n,piece:s})):void alert(\"You can only move your own pieces!\")}if(console.log(\"Attempting move:\",{from:{row:t.row,col:t.col},to:{row:r,col:n}}),t.row===r&&t.col===n)return console.log(\"Deselecting piece\"),void a(null);try{const l=await fetch(\"\".concat(i,\"/games/\").concat(e.gameId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({fromRow:t.row,fromCol:t.col,toRow:r,toCol:n})}),c=await l.json();if(!l.ok)throw new Error(c.error||\"Invalid move\");console.log(\"Move successful:\",c),o(c),a(null)}catch(d){console.error(\"Error making move:\",d),alert(d instanceof Error?d.message:\"Invalid move. Please try again.\"),a(null)}})(l,c),style:{width:\"60px\",height:\"60px\",backgroundColor:u?\"#90EE90\":m?\"#98FB98\":(l+c)%2===0?\"#fff\":\"#666\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",fontSize:\"40px\",cursor:\"pointer\",userSelect:\"none\",border:u?\"2px solid #32CD32\":\"none\",position:\"relative\"}},(e=>(console.log(\"Rendering piece:\",e),\"r\"===e?\"\\ud83d\\udd34\":\"b\"===e?\"\\u26ab\":\"R\"===e?\"\\ud83d\\udc51\\ud83d\\udd34\":\"B\"===e?\"\\ud83d\\udc51\\u26ab\":\"\"))(r))})))),n.a.createElement(\"div\",{style:{marginTop:\"20px\",textAlign:\"left\",whiteSpace:\"pre\",fontFamily:\"monospace\"}},\"Debug Board State:\",l)):null),!e.gameId&&n.a.createElement(\"div\",null,'Click \"New Game\" to start playing!'))};t.n(a).a.createRoot(document.getElementById(\"root\")).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(l,null)))},3:function(e,o,t){e.exports=t(12)}},[[3,1,2]]]);","extractedComments":[]}