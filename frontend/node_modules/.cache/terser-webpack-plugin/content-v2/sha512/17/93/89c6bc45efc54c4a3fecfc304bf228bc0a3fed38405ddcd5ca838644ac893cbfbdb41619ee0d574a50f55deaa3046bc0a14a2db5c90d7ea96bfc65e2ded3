{"map":"{\"version\":3,\"sources\":[\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/App.tsx\",\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/index.tsx\"],\"names\":[\"App\",\"game\",\"setGame\",\"useState\",\"debugBoard\",\"setDebugBoard\",\"apiEndpoint\",\"React\",\"createElement\",\"className\",\"style\",\"padding\",\"textAlign\",\"onClick\",\"async\",\"response\",\"fetch\",\"concat\",\"method\",\"headers\",\"Content-Type\",\"ok\",\"Error\",\"newGame\",\"json\",\"console\",\"log\",\"JSON\",\"stringify\",\"board\",\"error\",\"alert\",\"fontSize\",\"backgroundColor\",\"color\",\"border\",\"borderRadius\",\"cursor\",\"marginBottom\",\"gameId\",\"status\",\"currentPlayer\",\"display\",\"map\",\"row\",\"rowIndex\",\"key\",\"piece\",\"colIndex\",\"col\",\"_game$board\",\"_game$board$row\",\"body\",\"fromRow\",\"fromCol\",\"updatedGame\",\"handleSquareClick\",\"width\",\"height\",\"justifyContent\",\"alignItems\",\"userSelect\",\"renderPiece\",\"marginTop\",\"whiteSpace\",\"fontFamily\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from 'react';\\n\\ninterface GameState {\\n  gameId?: string;\\n  board?: string[][];\\n  currentPlayer?: 'red' | 'black';\\n  status?: 'waiting' | 'in_progress' | 'finished';\\n}\\n\\ninterface Square {\\n  row: number;\\n  col: number;\\n  piece: string;\\n}\\n\\nfunction App() {\\n  const [game, setGame] = useState<GameState>({});\\n  const [debugBoard, setDebugBoard] = useState<string>('');\\n  const apiEndpoint = 'https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod';\\n\\n  const createNewGame = async () => {\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        }\\n      });\\n      \\n      if (!response.ok) {\\n        throw new Error('Failed to create game');\\n      }\\n\\n      const newGame = await response.json();\\n      console.log('New game state:', newGame);\\n      setDebugBoard(JSON.stringify(newGame.board, null, 2));\\n      \\n      // Initialize the board if it's not provided\\n      if (!newGame.board) {\\n        newGame.board = [\\n          ['b', '', 'b', '', 'b', '', 'b', ''],\\n          ['', 'b', '', 'b', '', 'b', '', 'b'],\\n          ['b', '', 'b', '', 'b', '', 'b', ''],\\n          ['', '', '', '', '', '', '', ''],\\n          ['', '', '', '', '', '', '', ''],\\n          ['', 'r', '', 'r', '', 'r', '', 'r'],\\n          ['r', '', 'r', '', 'r', '', 'r', ''],\\n          ['', 'r', '', 'r', '', 'r', '', 'r']\\n        ];\\n      }\\n      \\n      setGame(newGame);\\n    } catch (error) {\\n      console.error('Error creating game:', error);\\n      alert('Failed to create new game. Please try again.');\\n    }\\n  };\\n\\n  const handleSquareClick = async (row: number, col: number) => {\\n    if (!game.gameId) return;\\n    console.log('Clicked square:', row, col);\\n    console.log('Current piece:', game.board?.[row]?.[col]);\\n\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games/${game.gameId}`, {\\n        method: 'PUT',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({\\n          fromRow: row,\\n          fromCol: col,\\n          // Note: We'll need to add toRow and toCol once we implement move selection\\n        }),\\n      });\\n\\n      if (!response.ok) {\\n        throw new Error('Failed to make move');\\n      }\\n\\n      const updatedGame = await response.json();\\n      console.log('Updated game state:', updatedGame);\\n      setGame(updatedGame);\\n    } catch (error) {\\n      console.error('Error making move:', error);\\n      alert('Failed to make move. Please try again.');\\n    }\\n  };\\n\\n  const renderPiece = (piece: string) => {\\n    console.log('Rendering piece:', piece);\\n    if (piece === 'r') return 'ðŸ”´';\\n    if (piece === 'b') return 'âš«';\\n    if (piece === 'R') return 'ðŸ‘‘ðŸ”´';\\n    if (piece === 'B') return 'ðŸ‘‘âš«';\\n    return '';\\n  };\\n\\n  const renderBoard = () => {\\n    if (!game.board) return null;\\n\\n    return (\\n      <div>\\n        <div style={{ \\n          display: 'inline-block',\\n          border: '2px solid #333',\\n          borderRadius: '4px',\\n          padding: '10px',\\n          backgroundColor: '#ddd'\\n        }}>\\n          {game.board.map((row, rowIndex) => (\\n            <div key={rowIndex} style={{ display: 'flex' }}>\\n              {row.map((piece, colIndex) => (\\n                <div\\n                  key={`${rowIndex}-${colIndex}`}\\n                  onClick={() => handleSquareClick(rowIndex, colIndex)}\\n                  style={{\\n                    width: '60px',\\n                    height: '60px',\\n                    backgroundColor: (rowIndex + colIndex) % 2 === 0 ? '#fff' : '#666',\\n                    display: 'flex',\\n                    justifyContent: 'center',\\n                    alignItems: 'center',\\n                    fontSize: '40px',\\n                    cursor: 'pointer',\\n                    userSelect: 'none'\\n                  }}\\n                >\\n                  {renderPiece(piece)}\\n                </div>\\n              ))}\\n            </div>\\n          ))}\\n        </div>\\n        <div style={{ marginTop: '20px', textAlign: 'left', whiteSpace: 'pre', fontFamily: 'monospace' }}>\\n          Debug Board State:\\n          {debugBoard}\\n        </div>\\n      </div>\\n    );\\n  };\\n\\n  return (\\n    <div className=\\\"App\\\" style={{ padding: '20px', textAlign: 'center' }}>\\n      <h1>Checkers Game</h1>\\n      \\n      <button \\n        onClick={createNewGame}\\n        style={{\\n          padding: '10px 20px',\\n          fontSize: '16px',\\n          backgroundColor: '#4CAF50',\\n          color: 'white',\\n          border: 'none',\\n          borderRadius: '4px',\\n          cursor: 'pointer',\\n          marginBottom: '20px'\\n        }}\\n      >\\n        New Game\\n      </button>\\n\\n      {game.gameId && (\\n        <div>\\n          <p style={{ marginBottom: '10px' }}>\\n            <strong>Game ID:</strong> {game.gameId} | \\n            <strong> Status:</strong> {game.status} |\\n            <strong> Current Player:</strong> {game.currentPlayer}\\n          </p>\\n          {renderBoard()}\\n        </div>\\n      )}\\n\\n      {!game.gameId && (\\n        <div>Click \\\"New Game\\\" to start playing!</div>\\n      )}\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\n\\nconst root = ReactDOM.createRoot(\\n  document.getElementById('root') as HTMLElement\\n);\\n\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,a){\"use strict\";a.r(t);var o=a(0),r=a.n(o),n=a(2);var l=function(){const[e,t]=Object(o.useState)({}),[a,n]=Object(o.useState)(\"\"),l=\"https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod\";return r.a.createElement(\"div\",{className:\"App\",style:{padding:\"20px\",textAlign:\"center\"}},r.a.createElement(\"h1\",null,\"Checkers Game\"),r.a.createElement(\"button\",{onClick:async()=>{try{const a=await fetch(\"\".concat(l,\"/games\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});if(!a.ok)throw new Error(\"Failed to create game\");const o=await a.json();console.log(\"New game state:\",o),n(JSON.stringify(o.board,null,2)),o.board||(o.board=[[\"b\",\"\",\"b\",\"\",\"b\",\"\",\"b\",\"\"],[\"\",\"b\",\"\",\"b\",\"\",\"b\",\"\",\"b\"],[\"b\",\"\",\"b\",\"\",\"b\",\"\",\"b\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"r\",\"\",\"r\",\"\",\"r\",\"\",\"r\"],[\"r\",\"\",\"r\",\"\",\"r\",\"\",\"r\",\"\"],[\"\",\"r\",\"\",\"r\",\"\",\"r\",\"\",\"r\"]]),t(o)}catch(e){console.error(\"Error creating game:\",e),alert(\"Failed to create new game. Please try again.\")}},style:{padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\",marginBottom:\"20px\"}},\"New Game\"),e.gameId&&r.a.createElement(\"div\",null,r.a.createElement(\"p\",{style:{marginBottom:\"10px\"}},r.a.createElement(\"strong\",null,\"Game ID:\"),\" \",e.gameId,\" |\",r.a.createElement(\"strong\",null,\" Status:\"),\" \",e.status,\" |\",r.a.createElement(\"strong\",null,\" Current Player:\"),\" \",e.currentPlayer),e.board?r.a.createElement(\"div\",null,r.a.createElement(\"div\",{style:{display:\"inline-block\",border:\"2px solid #333\",borderRadius:\"4px\",padding:\"10px\",backgroundColor:\"#ddd\"}},e.board.map((a,o)=>r.a.createElement(\"div\",{key:o,style:{display:\"flex\"}},a.map((a,n)=>r.a.createElement(\"div\",{key:\"\".concat(o,\"-\").concat(n),onClick:()=>(async(a,o)=>{var r,n;if(e.gameId){console.log(\"Clicked square:\",a,o),console.log(\"Current piece:\",null===(r=e.board)||void 0===r?void 0:null===(n=r[a])||void 0===n?void 0:n[o]);try{const r=await fetch(\"\".concat(l,\"/games/\").concat(e.gameId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({fromRow:a,fromCol:o})});if(!r.ok)throw new Error(\"Failed to make move\");const n=await r.json();console.log(\"Updated game state:\",n),t(n)}catch(c){console.error(\"Error making move:\",c),alert(\"Failed to make move. Please try again.\")}}})(o,n),style:{width:\"60px\",height:\"60px\",backgroundColor:(o+n)%2===0?\"#fff\":\"#666\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",fontSize:\"40px\",cursor:\"pointer\",userSelect:\"none\"}},(e=>(console.log(\"Rendering piece:\",e),\"r\"===e?\"\\ud83d\\udd34\":\"b\"===e?\"\\u26ab\":\"R\"===e?\"\\ud83d\\udc51\\ud83d\\udd34\":\"B\"===e?\"\\ud83d\\udc51\\u26ab\":\"\"))(a)))))),r.a.createElement(\"div\",{style:{marginTop:\"20px\",textAlign:\"left\",whiteSpace:\"pre\",fontFamily:\"monospace\"}},\"Debug Board State:\",a)):null),!e.gameId&&r.a.createElement(\"div\",null,'Click \"New Game\" to start playing!'))};a.n(n).a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(l,null)))},3:function(e,t,a){e.exports=a(12)}},[[3,1,2]]]);","extractedComments":[]}