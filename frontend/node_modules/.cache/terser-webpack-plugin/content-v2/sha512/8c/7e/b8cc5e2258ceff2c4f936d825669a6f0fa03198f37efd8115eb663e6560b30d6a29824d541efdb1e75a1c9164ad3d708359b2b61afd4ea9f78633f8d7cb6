{"map":"{\"version\":3,\"sources\":[\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/App.tsx\",\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/index.tsx\"],\"names\":[\"App\",\"game\",\"setGame\",\"useState\",\"selectedSquare\",\"setSelectedSquare\",\"validMoves\",\"setValidMoves\",\"apiEndpoint\",\"handleSquareClick\",\"async\",\"row\",\"col\",\"_game$board\",\"_game$board$row\",\"gameId\",\"status\",\"piece\",\"board\",\"console\",\"log\",\"currentPlayer\",\"toLowerCase\",\"alert\",\"moves\",\"calculateValidMoves\",\"fromRow\",\"fromCol\",\"isKing\",\"directions\",\"push\",\"rowDir\",\"colDir\",\"newRow\",\"newCol\",\"jumpRow\",\"jumpCol\",\"midRow\",\"midCol\",\"jumpedPiece\",\"length\",\"some\",\"move\",\"response\",\"fetch\",\"concat\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"toRow\",\"toCol\",\"responseData\",\"json\",\"ok\",\"Error\",\"error\",\"message\",\"React\",\"createElement\",\"className\",\"style\",\"padding\",\"textAlign\",\"onClick\",\"newGame\",\"fontSize\",\"backgroundColor\",\"color\",\"border\",\"borderRadius\",\"cursor\",\"marginBottom\",\"display\",\"map\",\"rowIndex\",\"key\",\"colIndex\",\"isSelected\",\"isDarkSquare\",\"isValidMove\",\"width\",\"height\",\"justifyContent\",\"alignItems\",\"userSelect\",\"position\",\"renderPiece\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from 'react';\\n\\ninterface GameState {\\n  gameId?: string;\\n  board?: string[][];\\n  currentPlayer?: 'red' | 'black';\\n  status?: 'waiting' | 'in_progress' | 'finished';\\n}\\n\\ninterface Square {\\n  row: number;\\n  col: number;\\n  piece: string;\\n}\\n\\nfunction App() {\\n  const [game, setGame] = useState<GameState>({});\\n  const [selectedSquare, setSelectedSquare] = useState<Square | null>(null);\\n  const [validMoves, setValidMoves] = useState<{row: number, col: number}[]>([]);\\n  const apiEndpoint = 'https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod';\\n\\n  const createNewGame = async () => {\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        }\\n      });\\n      \\n      if (!response.ok) {\\n        throw new Error('Failed to create game');\\n      }\\n\\n      const newGame = await response.json();\\n      console.log('New game state:', newGame);\\n      setGame(newGame);\\n      setSelectedSquare(null);\\n      setValidMoves([]);\\n    } catch (error) {\\n      console.error('Error creating game:', error);\\n      alert('Failed to create new game. Please try again.');\\n    }\\n  };\\n\\n  const calculateValidMoves = (fromRow: number, fromCol: number): {row: number, col: number}[] => {\\n    if (!game.board) return [];\\n\\n    const piece = game.board[fromRow][fromCol];\\n    const isKing = piece === 'R' || piece === 'B';\\n    const moves: {row: number, col: number}[] = [];\\n\\n    // Possible move directions\\n    const directions = [];\\n    if (game.currentPlayer === 'red' || isKing) {\\n      directions.push(-1); // Up\\n    }\\n    if (game.currentPlayer === 'black' || isKing) {\\n      directions.push(1);  // Down\\n    }\\n\\n    // Check regular moves\\n    for (const rowDir of directions) {\\n      for (const colDir of [-1, 1]) {\\n        const newRow = fromRow + rowDir;\\n        const newCol = fromCol + colDir;\\n        \\n        if (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8 &&\\n            (newRow + newCol) % 2 === 1 && !game.board[newRow][newCol]) {\\n          moves.push({row: newRow, col: newCol});\\n        }\\n      }\\n    }\\n\\n    // Check jump moves\\n    for (const rowDir of directions) {\\n      for (const colDir of [-1, 1]) {\\n        const jumpRow = fromRow + rowDir * 2;\\n        const jumpCol = fromCol + colDir * 2;\\n        const midRow = fromRow + rowDir;\\n        const midCol = fromCol + colDir;\\n        \\n        if (jumpRow >= 0 && jumpRow < 8 && jumpCol >= 0 && jumpCol < 8 &&\\n            (jumpRow + jumpCol) % 2 === 1 && !game.board[jumpRow][jumpCol]) {\\n          const jumpedPiece = game.board[midRow][midCol];\\n          if (jumpedPiece && \\n              ((game.currentPlayer === 'red' && jumpedPiece.toLowerCase() === 'b') ||\\n               (game.currentPlayer === 'black' && jumpedPiece.toLowerCase() === 'r'))) {\\n            moves.push({row: jumpRow, col: jumpCol});\\n          }\\n        }\\n      }\\n    }\\n\\n    return moves;\\n  };\\n\\n  const handleSquareClick = async (row: number, col: number) => {\\n    if (!game.gameId || game.status === 'finished') return;\\n    \\n    const piece = game.board?.[row]?.[col];\\n    console.log('Clicked square:', row, col);\\n    console.log('Current piece:', piece);\\n    console.log('Current player:', game.currentPlayer);\\n\\n    // First click - selecting a piece\\n    if (!selectedSquare) {\\n      if (!piece) {\\n        console.log('Clicked empty square');\\n        return;\\n      }\\n\\n      const isCurrentPlayersPiece = \\n        (game.currentPlayer === 'red' && piece.toLowerCase() === 'r') ||\\n        (game.currentPlayer === 'black' && piece.toLowerCase() === 'b');\\n\\n      if (!isCurrentPlayersPiece) {\\n        alert(\\\"You can only move your own pieces!\\\");\\n        return;\\n      }\\n\\n      const moves = calculateValidMoves(row, col);\\n      if (moves.length === 0) {\\n        alert(\\\"This piece has no valid moves!\\\");\\n        return;\\n      }\\n\\n      setSelectedSquare({ row, col, piece });\\n      setValidMoves(moves);\\n      return;\\n    }\\n\\n    // Second click - making a move\\n    if (selectedSquare.row === row && selectedSquare.col === col) {\\n      setSelectedSquare(null);\\n      setValidMoves([]);\\n      return;\\n    }\\n\\n    // Check if this is a valid move\\n    if (!validMoves.some(move => move.row === row && move.col === col)) {\\n      setSelectedSquare(null);\\n      setValidMoves([]);\\n      return;\\n    }\\n\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games/${game.gameId}`, {\\n        method: 'PUT',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({\\n          fromRow: selectedSquare.row,\\n          fromCol: selectedSquare.col,\\n          toRow: row,\\n          toCol: col\\n        }),\\n      });\\n\\n      const responseData = await response.json();\\n      \\n      if (!response.ok) {\\n        throw new Error(responseData.error || 'Invalid move');\\n      }\\n\\n      setGame(responseData);\\n      setSelectedSquare(null);\\n      setValidMoves([]);\\n    } catch (error) {\\n      console.error('Error making move:', error);\\n      alert(error instanceof Error ? error.message : 'Invalid move. Please try again.');\\n      setSelectedSquare(null);\\n      setValidMoves([]);\\n    }\\n  };\\n\\n  const renderPiece = (piece: string) => {\\n    if (piece === 'r') return '🔴';\\n    if (piece === 'b') return '⚫';\\n    if (piece === 'R') return '👑🔴';\\n    if (piece === 'B') return '👑⚫';\\n    return '';\\n  };\\n\\n  const renderBoard = () => {\\n    if (!game.board) return null;\\n\\n    return (\\n      <div>\\n        <div style={{ \\n          display: 'inline-block',\\n          border: '2px solid #333',\\n          borderRadius: '4px',\\n          padding: '10px',\\n          backgroundColor: '#ddd'\\n        }}>\\n          {game.board.map((row, rowIndex) => (\\n            <div key={rowIndex} style={{ display: 'flex' }}>\\n              {row.map((piece, colIndex) => {\\n                const isSelected = selectedSquare?.row === rowIndex && selectedSquare?.col === colIndex;\\n                const isDarkSquare = (rowIndex + colIndex) % 2 === 1;\\n                const isValidMove = validMoves.some(move => \\n                  move.row === rowIndex && move.col === colIndex\\n                );\\n\\n                return (\\n                  <div\\n                    key={`${rowIndex}-${colIndex}`}\\n                    onClick={() => handleSquareClick(rowIndex, colIndex)}\\n                    style={{\\n                      width: '60px',\\n                      height: '60px',\\n                      backgroundColor: isSelected ? '#90EE90' : \\n                                    isValidMove ? '#98FB98' :\\n                                    isDarkSquare ? '#666' : '#fff',\\n                      display: 'flex',\\n                      justifyContent: 'center',\\n                      alignItems: 'center',\\n                      fontSize: '40px',\\n                      cursor: 'pointer',\\n                      userSelect: 'none',\\n                      border: isSelected ? '2px solid #32CD32' : 'none',\\n                      position: 'relative'\\n                    }}\\n                  >\\n                    {renderPiece(piece)}\\n                  </div>\\n                );\\n              })}\\n            </div>\\n          ))}\\n        </div>\\n      </div>\\n    );\\n  };\\n\\n  return (\\n    <div className=\\\"App\\\" style={{ padding: '20px', textAlign: 'center' }}>\\n      <h1>Checkers Game</h1>\\n      \\n      <button \\n        onClick={createNewGame}\\n        style={{\\n          padding: '10px 20px',\\n          fontSize: '16px',\\n          backgroundColor: '#4CAF50',\\n          color: 'white',\\n          border: 'none',\\n          borderRadius: '4px',\\n          cursor: 'pointer',\\n          marginBottom: '20px'\\n        }}\\n      >\\n        New Game\\n      </button>\\n\\n      {game.gameId && (\\n        <div>\\n          <p style={{ marginBottom: '10px' }}>\\n            <strong>Game ID:</strong> {game.gameId} | \\n            <strong> Status:</strong> {game.status} |\\n            <strong> Current Player:</strong> {game.currentPlayer}\\n          </p>\\n          {renderBoard()}\\n        </div>\\n      )}\\n\\n      {!game.gameId && (\\n        <div>Click \\\"New Game\\\" to start playing!</div>\\n      )}\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\n\\nconst root = ReactDOM.createRoot(\\n  document.getElementById('root') as HTMLElement\\n);\\n\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,o,r){\"use strict\";r.r(o);var t=r(0),n=r.n(t),a=r(2);var l=function(){const[e,o]=Object(t.useState)({}),[r,a]=Object(t.useState)(null),[l,c]=Object(t.useState)([]),s=\"https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod\",i=async(t,n)=>{var i,d;if(!e.gameId||\"finished\"===e.status)return;const u=null===(i=e.board)||void 0===i?void 0:null===(d=i[t])||void 0===d?void 0:d[n];if(console.log(\"Clicked square:\",t,n),console.log(\"Current piece:\",u),console.log(\"Current player:\",e.currentPlayer),!r){if(!u)return void console.log(\"Clicked empty square\");if(!(\"red\"===e.currentPlayer&&\"r\"===u.toLowerCase()||\"black\"===e.currentPlayer&&\"b\"===u.toLowerCase()))return void alert(\"You can only move your own pieces!\");const o=((o,r)=>{if(!e.board)return[];const t=e.board[o][r],n=\"R\"===t||\"B\"===t,a=[],l=[];(\"red\"===e.currentPlayer||n)&&l.push(-1),(\"black\"===e.currentPlayer||n)&&l.push(1);for(const c of l)for(const t of[-1,1]){const n=o+c,l=r+t;n>=0&&n<8&&l>=0&&l<8&&(n+l)%2===1&&!e.board[n][l]&&a.push({row:n,col:l})}for(const c of l)for(const t of[-1,1]){const n=o+2*c,l=r+2*t,s=o+c,i=r+t;if(n>=0&&n<8&&l>=0&&l<8&&(n+l)%2===1&&!e.board[n][l]){const o=e.board[s][i];o&&(\"red\"===e.currentPlayer&&\"b\"===o.toLowerCase()||\"black\"===e.currentPlayer&&\"r\"===o.toLowerCase())&&a.push({row:n,col:l})}}return a})(t,n);return 0===o.length?void alert(\"This piece has no valid moves!\"):(a({row:t,col:n,piece:u}),void c(o))}if(r.row===t&&r.col===n)return a(null),void c([]);if(!l.some(e=>e.row===t&&e.col===n))return a(null),void c([]);try{const l=await fetch(\"\".concat(s,\"/games/\").concat(e.gameId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({fromRow:r.row,fromCol:r.col,toRow:t,toCol:n})}),i=await l.json();if(!l.ok)throw new Error(i.error||\"Invalid move\");o(i),a(null),c([])}catch(m){console.error(\"Error making move:\",m),alert(m instanceof Error?m.message:\"Invalid move. Please try again.\"),a(null),c([])}};return n.a.createElement(\"div\",{className:\"App\",style:{padding:\"20px\",textAlign:\"center\"}},n.a.createElement(\"h1\",null,\"Checkers Game\"),n.a.createElement(\"button\",{onClick:async()=>{try{const r=await fetch(\"\".concat(s,\"/games\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});if(!r.ok)throw new Error(\"Failed to create game\");const t=await r.json();console.log(\"New game state:\",t),o(t),a(null),c([])}catch(e){console.error(\"Error creating game:\",e),alert(\"Failed to create new game. Please try again.\")}},style:{padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\",marginBottom:\"20px\"}},\"New Game\"),e.gameId&&n.a.createElement(\"div\",null,n.a.createElement(\"p\",{style:{marginBottom:\"10px\"}},n.a.createElement(\"strong\",null,\"Game ID:\"),\" \",e.gameId,\" |\",n.a.createElement(\"strong\",null,\" Status:\"),\" \",e.status,\" |\",n.a.createElement(\"strong\",null,\" Current Player:\"),\" \",e.currentPlayer),e.board?n.a.createElement(\"div\",null,n.a.createElement(\"div\",{style:{display:\"inline-block\",border:\"2px solid #333\",borderRadius:\"4px\",padding:\"10px\",backgroundColor:\"#ddd\"}},e.board.map((e,o)=>n.a.createElement(\"div\",{key:o,style:{display:\"flex\"}},e.map((e,t)=>{const a=(null===r||void 0===r?void 0:r.row)===o&&(null===r||void 0===r?void 0:r.col)===t,c=(o+t)%2===1,s=l.some(e=>e.row===o&&e.col===t);return n.a.createElement(\"div\",{key:\"\".concat(o,\"-\").concat(t),onClick:()=>i(o,t),style:{width:\"60px\",height:\"60px\",backgroundColor:a?\"#90EE90\":s?\"#98FB98\":c?\"#666\":\"#fff\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",fontSize:\"40px\",cursor:\"pointer\",userSelect:\"none\",border:a?\"2px solid #32CD32\":\"none\",position:\"relative\"}},(e=>\"r\"===e?\"\\ud83d\\udd34\":\"b\"===e?\"\\u26ab\":\"R\"===e?\"\\ud83d\\udc51\\ud83d\\udd34\":\"B\"===e?\"\\ud83d\\udc51\\u26ab\":\"\")(e))}))))):null),!e.gameId&&n.a.createElement(\"div\",null,'Click \"New Game\" to start playing!'))};r.n(a).a.createRoot(document.getElementById(\"root\")).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(l,null)))},3:function(e,o,r){e.exports=r(12)}},[[3,1,2]]]);","extractedComments":[]}