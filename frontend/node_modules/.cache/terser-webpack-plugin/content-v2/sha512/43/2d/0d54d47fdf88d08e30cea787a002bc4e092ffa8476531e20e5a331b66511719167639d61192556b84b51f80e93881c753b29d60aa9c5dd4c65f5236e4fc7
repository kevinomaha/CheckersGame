{"map":"{\"version\":3,\"sources\":[\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/App.tsx\",\"C:/Users/kevin/OneDrive/Documents/Projects/AWS/CheckersGame/frontend/src/index.tsx\"],\"names\":[\"App\",\"game\",\"setGame\",\"useState\",\"apiEndpoint\",\"React\",\"createElement\",\"className\",\"style\",\"padding\",\"textAlign\",\"onClick\",\"async\",\"response\",\"fetch\",\"concat\",\"method\",\"headers\",\"Content-Type\",\"ok\",\"Error\",\"newGame\",\"json\",\"error\",\"console\",\"alert\",\"fontSize\",\"backgroundColor\",\"color\",\"border\",\"borderRadius\",\"cursor\",\"marginBottom\",\"gameId\",\"status\",\"currentPlayer\",\"board\",\"display\",\"map\",\"row\",\"rowIndex\",\"key\",\"piece\",\"colIndex\",\"col\",\"body\",\"JSON\",\"stringify\",\"fromRow\",\"fromCol\",\"updatedGame\",\"handleSquareClick\",\"width\",\"height\",\"justifyContent\",\"alignItems\",\"userSelect\",\"renderPiece\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"2HAwJeA,IAAAA,EAzIf,WACE,MAAOC,EAAMC,GAAWC,OAAAA,EAAAA,SAAAA,CAAoB,IACtCC,EAAc,8DAiGpB,OACEC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,MAAMC,MAAO,CAAEC,QAAS,OAAQC,UAAW,WACxDL,EAAAA,EAAAC,cAAA,KAAA,KAAI,iBAEJD,EAAAA,EAAAC,cAAA,SAAA,CACEK,QApGgBC,UACpB,IACE,MAAMC,QAAiBC,MAAK,GAAAC,OAAIX,EAAW,UAAU,CACnDY,OAAQ,OACRC,QAAS,CACPC,eAAgB,sBAIpB,IAAKL,EAASM,GACZ,MAAM,IAAIC,MAAM,yBAGlB,MAAMC,QAAgBR,EAASS,OAC/BpB,EAAQmB,GACR,MAAOE,GACPC,QAAQD,MAAM,uBAAwBA,GACtCE,MAAM,kDAoFJjB,MAAO,CACLC,QAAS,YACTiB,SAAU,OACVC,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,UACRC,aAAc,SAEjB,YAIA/B,EAAKgC,QACJ5B,EAAAA,EAAAC,cAAA,MAAA,KACED,EAAAA,EAAAC,cAAA,IAAA,CAAGE,MAAO,CAAEwB,aAAc,SACxB3B,EAAAA,EAAAC,cAAA,SAAA,KAAQ,YAAiB,IAAEL,EAAKgC,OAAO,KACvC5B,EAAAA,EAAAC,cAAA,SAAA,KAAQ,YAAiB,IAAEL,EAAKiC,OAAO,KACvC7B,EAAAA,EAAAC,cAAA,SAAA,KAAQ,oBAAyB,IAAEL,EAAKkC,eA9D3ClC,EAAKmC,MAGR/B,EAAAA,EAAAC,cAAA,MAAA,CAAKE,MAAO,CACV6B,QAAS,eACTR,OAAQ,iBACRC,aAAc,MACdrB,QAAS,OACTkB,gBAAiB,SAEhB1B,EAAKmC,MAAME,IAAI,CAACC,EAAKC,IACpBnC,EAAAA,EAAAC,cAAA,MAAA,CAAKmC,IAAKD,EAAUhC,MAAO,CAAE6B,QAAS,SACnCE,EAAID,IAAI,CAACI,EAAOC,IACftC,EAAAA,EAAAC,cAAA,MAAA,CACEmC,IAAG,GAAA1B,OAAKyB,EAAQ,KAAAzB,OAAI4B,GACpBhC,QAASA,IApDGC,OAAO2B,EAAaK,KAC5C,GAAK3C,EAAKgC,OAEV,IACE,MAAMpB,QAAiBC,MAAK,GAAAC,OAAIX,EAAW,WAAAW,OAAUd,EAAKgC,QAAU,CAClEjB,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElB2B,KAAMC,KAAKC,UAAU,CACnBC,QAAST,EACTU,QAASL,MAKb,IAAK/B,EAASM,GACZ,MAAM,IAAIC,MAAM,uBAGlB,MAAM8B,QAAoBrC,EAASS,OACnCpB,EAAQgD,GACR,MAAO3B,GACPC,QAAQD,MAAM,qBAAsBA,GACpCE,MAAM,4CA4BmB0B,CAAkBX,EAAUG,GAC3CnC,MAAO,CACL4C,MAAO,OACPC,OAAQ,OACR1B,iBAAkBa,EAAWG,GAAY,IAAM,EAAI,OAAS,OAC5DN,QAAS,OACTiB,eAAgB,SAChBC,WAAY,SACZ7B,SAAU,OACVK,OAAQ,UACRyB,WAAY,SAlCPd,CAAAA,GACL,MAAVA,EAAsB,eACZ,MAAVA,EAAsB,SACZ,MAAVA,EAAsB,2BACZ,MAAVA,EAAsB,qBACnB,GAgCMe,CAAYf,QA5BD,OAoEpBzC,EAAKgC,QACL5B,EAAAA,EAAAC,cAAA,MAAA,KAAK,+CC9IAoD,EAASC,WACpBC,SAASC,eAAe,SAGrBC,OACHzD,EAAAA,EAAAC,cAACD,EAAAA,EAAM0D,WAAU,KACf1D,EAAAA,EAAAC,cAACN,EAAG\",\"sourcesContent\":[\"import React, { useState } from 'react';\\n\\ninterface GameState {\\n  gameId?: string;\\n  board?: string[][];\\n  currentPlayer?: 'red' | 'black';\\n  status?: 'waiting' | 'in_progress' | 'finished';\\n}\\n\\ninterface Square {\\n  row: number;\\n  col: number;\\n  piece: string;\\n}\\n\\nfunction App() {\\n  const [game, setGame] = useState<GameState>({});\\n  const apiEndpoint = 'https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod';\\n\\n  const createNewGame = async () => {\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        }\\n      });\\n      \\n      if (!response.ok) {\\n        throw new Error('Failed to create game');\\n      }\\n\\n      const newGame = await response.json();\\n      setGame(newGame);\\n    } catch (error) {\\n      console.error('Error creating game:', error);\\n      alert('Failed to create new game. Please try again.');\\n    }\\n  };\\n\\n  const handleSquareClick = async (row: number, col: number) => {\\n    if (!game.gameId) return;\\n\\n    try {\\n      const response = await fetch(`${apiEndpoint}/games/${game.gameId}`, {\\n        method: 'PUT',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({\\n          fromRow: row,\\n          fromCol: col,\\n          // Note: We'll need to add toRow and toCol once we implement move selection\\n        }),\\n      });\\n\\n      if (!response.ok) {\\n        throw new Error('Failed to make move');\\n      }\\n\\n      const updatedGame = await response.json();\\n      setGame(updatedGame);\\n    } catch (error) {\\n      console.error('Error making move:', error);\\n      alert('Failed to make move. Please try again.');\\n    }\\n  };\\n\\n  const renderPiece = (piece: string) => {\\n    if (piece === 'r') return 'ðŸ”´';\\n    if (piece === 'b') return 'âš«';\\n    if (piece === 'R') return 'ðŸ‘‘ðŸ”´';\\n    if (piece === 'B') return 'ðŸ‘‘âš«';\\n    return '';\\n  };\\n\\n  const renderBoard = () => {\\n    if (!game.board) return null;\\n\\n    return (\\n      <div style={{ \\n        display: 'inline-block',\\n        border: '2px solid #333',\\n        borderRadius: '4px',\\n        padding: '10px',\\n        backgroundColor: '#ddd'\\n      }}>\\n        {game.board.map((row, rowIndex) => (\\n          <div key={rowIndex} style={{ display: 'flex' }}>\\n            {row.map((piece, colIndex) => (\\n              <div\\n                key={`${rowIndex}-${colIndex}`}\\n                onClick={() => handleSquareClick(rowIndex, colIndex)}\\n                style={{\\n                  width: '60px',\\n                  height: '60px',\\n                  backgroundColor: (rowIndex + colIndex) % 2 === 0 ? '#fff' : '#666',\\n                  display: 'flex',\\n                  justifyContent: 'center',\\n                  alignItems: 'center',\\n                  fontSize: '40px',\\n                  cursor: 'pointer',\\n                  userSelect: 'none'\\n                }}\\n              >\\n                {renderPiece(piece)}\\n              </div>\\n            ))}\\n          </div>\\n        ))}\\n      </div>\\n    );\\n  };\\n\\n  return (\\n    <div className=\\\"App\\\" style={{ padding: '20px', textAlign: 'center' }}>\\n      <h1>Checkers Game</h1>\\n      \\n      <button \\n        onClick={createNewGame}\\n        style={{\\n          padding: '10px 20px',\\n          fontSize: '16px',\\n          backgroundColor: '#4CAF50',\\n          color: 'white',\\n          border: 'none',\\n          borderRadius: '4px',\\n          cursor: 'pointer',\\n          marginBottom: '20px'\\n        }}\\n      >\\n        New Game\\n      </button>\\n\\n      {game.gameId && (\\n        <div>\\n          <p style={{ marginBottom: '10px' }}>\\n            <strong>Game ID:</strong> {game.gameId} | \\n            <strong> Status:</strong> {game.status} |\\n            <strong> Current Player:</strong> {game.currentPlayer}\\n          </p>\\n          {renderBoard()}\\n        </div>\\n      )}\\n\\n      {!game.gameId && (\\n        <div>Click \\\"New Game\\\" to start playing!</div>\\n      )}\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\n\\nconst root = ReactDOM.createRoot(\\n  document.getElementById('root') as HTMLElement\\n);\\n\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),o=a(2);var l=function(){const[e,t]=Object(n.useState)({}),a=\"https://rd2ll5az83.execute-api.us-east-1.amazonaws.com/prod\";return r.a.createElement(\"div\",{className:\"App\",style:{padding:\"20px\",textAlign:\"center\"}},r.a.createElement(\"h1\",null,\"Checkers Game\"),r.a.createElement(\"button\",{onClick:async()=>{try{const n=await fetch(\"\".concat(a,\"/games\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});if(!n.ok)throw new Error(\"Failed to create game\");const r=await n.json();t(r)}catch(e){console.error(\"Error creating game:\",e),alert(\"Failed to create new game. Please try again.\")}},style:{padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\",marginBottom:\"20px\"}},\"New Game\"),e.gameId&&r.a.createElement(\"div\",null,r.a.createElement(\"p\",{style:{marginBottom:\"10px\"}},r.a.createElement(\"strong\",null,\"Game ID:\"),\" \",e.gameId,\" |\",r.a.createElement(\"strong\",null,\" Status:\"),\" \",e.status,\" |\",r.a.createElement(\"strong\",null,\" Current Player:\"),\" \",e.currentPlayer),e.board?r.a.createElement(\"div\",{style:{display:\"inline-block\",border:\"2px solid #333\",borderRadius:\"4px\",padding:\"10px\",backgroundColor:\"#ddd\"}},e.board.map((n,o)=>r.a.createElement(\"div\",{key:o,style:{display:\"flex\"}},n.map((n,l)=>r.a.createElement(\"div\",{key:\"\".concat(o,\"-\").concat(l),onClick:()=>(async(n,r)=>{if(e.gameId)try{const l=await fetch(\"\".concat(a,\"/games/\").concat(e.gameId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({fromRow:n,fromCol:r})});if(!l.ok)throw new Error(\"Failed to make move\");const c=await l.json();t(c)}catch(o){console.error(\"Error making move:\",o),alert(\"Failed to make move. Please try again.\")}})(o,l),style:{width:\"60px\",height:\"60px\",backgroundColor:(o+l)%2===0?\"#fff\":\"#666\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",fontSize:\"40px\",cursor:\"pointer\",userSelect:\"none\"}},(e=>\"r\"===e?\"\\ud83d\\udd34\":\"b\"===e?\"\\u26ab\":\"R\"===e?\"\\ud83d\\udc51\\ud83d\\udd34\":\"B\"===e?\"\\ud83d\\udc51\\u26ab\":\"\")(n)))))):null),!e.gameId&&r.a.createElement(\"div\",null,'Click \"New Game\" to start playing!'))};a.n(o).a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(l,null)))},3:function(e,t,a){e.exports=a(12)}},[[3,1,2]]]);","extractedComments":[]}